// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: prodpb/partner.proto

package prodpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Partner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OpenBal   float64 `protobuf:"fixed64,3,opt,name=openBal,proto3" json:"openBal,omitempty"`
	CurrBal   float64 `protobuf:"fixed64,4,opt,name=currBal,proto3" json:"currBal,omitempty"`
	ContactNo string  `protobuf:"bytes,5,opt,name=contactNo,proto3" json:"contactNo,omitempty"`
	Details   string  `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *Partner) Reset() {
	*x = Partner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodpb_partner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Partner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Partner) ProtoMessage() {}

func (x *Partner) ProtoReflect() protoreflect.Message {
	mi := &file_prodpb_partner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Partner.ProtoReflect.Descriptor instead.
func (*Partner) Descriptor() ([]byte, []int) {
	return file_prodpb_partner_proto_rawDescGZIP(), []int{0}
}

func (x *Partner) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Partner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Partner) GetOpenBal() float64 {
	if x != nil {
		return x.OpenBal
	}
	return 0
}

func (x *Partner) GetCurrBal() float64 {
	if x != nil {
		return x.CurrBal
	}
	return 0
}

func (x *Partner) GetContactNo() string {
	if x != nil {
		return x.ContactNo
	}
	return ""
}

func (x *Partner) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type PartnerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PartnerId) Reset() {
	*x = PartnerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodpb_partner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartnerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerId) ProtoMessage() {}

func (x *PartnerId) ProtoReflect() protoreflect.Message {
	mi := &file_prodpb_partner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerId.ProtoReflect.Descriptor instead.
func (*PartnerId) Descriptor() ([]byte, []int) {
	return file_prodpb_partner_proto_rawDescGZIP(), []int{1}
}

func (x *PartnerId) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Partners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyPartners []*Partner `protobuf:"bytes,1,rep,name=myPartners,proto3" json:"myPartners,omitempty"`
}

func (x *Partners) Reset() {
	*x = Partners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodpb_partner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Partners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Partners) ProtoMessage() {}

func (x *Partners) ProtoReflect() protoreflect.Message {
	mi := &file_prodpb_partner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Partners.ProtoReflect.Descriptor instead.
func (*Partners) Descriptor() ([]byte, []int) {
	return file_prodpb_partner_proto_rawDescGZIP(), []int{2}
}

func (x *Partners) GetMyPartners() []*Partner {
	if x != nil {
		return x.MyPartners
	}
	return nil
}

type GetPartnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPartnerRequest) Reset() {
	*x = GetPartnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodpb_partner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerRequest) ProtoMessage() {}

func (x *GetPartnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prodpb_partner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerRequest.ProtoReflect.Descriptor instead.
func (*GetPartnerRequest) Descriptor() ([]byte, []int) {
	return file_prodpb_partner_proto_rawDescGZIP(), []int{3}
}

type DelPartnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelPartnerResponse) Reset() {
	*x = DelPartnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prodpb_partner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPartnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPartnerResponse) ProtoMessage() {}

func (x *DelPartnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prodpb_partner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPartnerResponse.ProtoReflect.Descriptor instead.
func (*DelPartnerResponse) Descriptor() ([]byte, []int) {
	return file_prodpb_partner_proto_rawDescGZIP(), []int{4}
}

var File_prodpb_partner_proto protoreflect.FileDescriptor

var file_prodpb_partner_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x72, 0x6f, 0x64, 0x22, 0x99, 0x01, 0x0a,
	0x07, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x42, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x42, 0x61, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1b, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x6d, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x6d, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73,
	0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf4, 0x01, 0x0a, 0x0e,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x1a, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x2e, 0x44, 0x65,
	0x6c, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x72, 0x6f, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prodpb_partner_proto_rawDescOnce sync.Once
	file_prodpb_partner_proto_rawDescData = file_prodpb_partner_proto_rawDesc
)

func file_prodpb_partner_proto_rawDescGZIP() []byte {
	file_prodpb_partner_proto_rawDescOnce.Do(func() {
		file_prodpb_partner_proto_rawDescData = protoimpl.X.CompressGZIP(file_prodpb_partner_proto_rawDescData)
	})
	return file_prodpb_partner_proto_rawDescData
}

var file_prodpb_partner_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_prodpb_partner_proto_goTypes = []interface{}{
	(*Partner)(nil),            // 0: prod.Partner
	(*PartnerId)(nil),          // 1: prod.PartnerId
	(*Partners)(nil),           // 2: prod.Partners
	(*GetPartnerRequest)(nil),  // 3: prod.GetPartnerRequest
	(*DelPartnerResponse)(nil), // 4: prod.DelPartnerResponse
}
var file_prodpb_partner_proto_depIdxs = []int32{
	0, // 0: prod.Partners.myPartners:type_name -> prod.Partner
	0, // 1: prod.PartnerService.AddPartner:input_type -> prod.Partner
	3, // 2: prod.PartnerService.GetPartners:input_type -> prod.GetPartnerRequest
	1, // 3: prod.PartnerService.DeletePartner:input_type -> prod.PartnerId
	0, // 4: prod.PartnerService.UpdatePartner:input_type -> prod.Partner
	1, // 5: prod.PartnerService.AddPartner:output_type -> prod.PartnerId
	2, // 6: prod.PartnerService.GetPartners:output_type -> prod.Partners
	4, // 7: prod.PartnerService.DeletePartner:output_type -> prod.DelPartnerResponse
	4, // 8: prod.PartnerService.UpdatePartner:output_type -> prod.DelPartnerResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_prodpb_partner_proto_init() }
func file_prodpb_partner_proto_init() {
	if File_prodpb_partner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prodpb_partner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Partner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodpb_partner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartnerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodpb_partner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Partners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodpb_partner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prodpb_partner_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPartnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prodpb_partner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prodpb_partner_proto_goTypes,
		DependencyIndexes: file_prodpb_partner_proto_depIdxs,
		MessageInfos:      file_prodpb_partner_proto_msgTypes,
	}.Build()
	File_prodpb_partner_proto = out.File
	file_prodpb_partner_proto_rawDesc = nil
	file_prodpb_partner_proto_goTypes = nil
	file_prodpb_partner_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PartnerServiceClient is the client API for PartnerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PartnerServiceClient interface {
	AddPartner(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*PartnerId, error)
	GetPartners(ctx context.Context, in *GetPartnerRequest, opts ...grpc.CallOption) (*Partners, error)
	DeletePartner(ctx context.Context, in *PartnerId, opts ...grpc.CallOption) (*DelPartnerResponse, error)
	UpdatePartner(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*DelPartnerResponse, error)
}

type partnerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPartnerServiceClient(cc grpc.ClientConnInterface) PartnerServiceClient {
	return &partnerServiceClient{cc}
}

func (c *partnerServiceClient) AddPartner(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*PartnerId, error) {
	out := new(PartnerId)
	err := c.cc.Invoke(ctx, "/prod.PartnerService/AddPartner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerServiceClient) GetPartners(ctx context.Context, in *GetPartnerRequest, opts ...grpc.CallOption) (*Partners, error) {
	out := new(Partners)
	err := c.cc.Invoke(ctx, "/prod.PartnerService/GetPartners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerServiceClient) DeletePartner(ctx context.Context, in *PartnerId, opts ...grpc.CallOption) (*DelPartnerResponse, error) {
	out := new(DelPartnerResponse)
	err := c.cc.Invoke(ctx, "/prod.PartnerService/DeletePartner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerServiceClient) UpdatePartner(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*DelPartnerResponse, error) {
	out := new(DelPartnerResponse)
	err := c.cc.Invoke(ctx, "/prod.PartnerService/UpdatePartner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PartnerServiceServer is the server API for PartnerService service.
type PartnerServiceServer interface {
	AddPartner(context.Context, *Partner) (*PartnerId, error)
	GetPartners(context.Context, *GetPartnerRequest) (*Partners, error)
	DeletePartner(context.Context, *PartnerId) (*DelPartnerResponse, error)
	UpdatePartner(context.Context, *Partner) (*DelPartnerResponse, error)
}

// UnimplementedPartnerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPartnerServiceServer struct {
}

func (*UnimplementedPartnerServiceServer) AddPartner(context.Context, *Partner) (*PartnerId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPartner not implemented")
}
func (*UnimplementedPartnerServiceServer) GetPartners(context.Context, *GetPartnerRequest) (*Partners, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartners not implemented")
}
func (*UnimplementedPartnerServiceServer) DeletePartner(context.Context, *PartnerId) (*DelPartnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePartner not implemented")
}
func (*UnimplementedPartnerServiceServer) UpdatePartner(context.Context, *Partner) (*DelPartnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePartner not implemented")
}

func RegisterPartnerServiceServer(s *grpc.Server, srv PartnerServiceServer) {
	s.RegisterService(&_PartnerService_serviceDesc, srv)
}

func _PartnerService_AddPartner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Partner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerServiceServer).AddPartner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prod.PartnerService/AddPartner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerServiceServer).AddPartner(ctx, req.(*Partner))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerService_GetPartners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerServiceServer).GetPartners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prod.PartnerService/GetPartners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerServiceServer).GetPartners(ctx, req.(*GetPartnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerService_DeletePartner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerServiceServer).DeletePartner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prod.PartnerService/DeletePartner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerServiceServer).DeletePartner(ctx, req.(*PartnerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerService_UpdatePartner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Partner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerServiceServer).UpdatePartner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prod.PartnerService/UpdatePartner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerServiceServer).UpdatePartner(ctx, req.(*Partner))
	}
	return interceptor(ctx, in, info, handler)
}

var _PartnerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prod.PartnerService",
	HandlerType: (*PartnerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPartner",
			Handler:    _PartnerService_AddPartner_Handler,
		},
		{
			MethodName: "GetPartners",
			Handler:    _PartnerService_GetPartners_Handler,
		},
		{
			MethodName: "DeletePartner",
			Handler:    _PartnerService_DeletePartner_Handler,
		},
		{
			MethodName: "UpdatePartner",
			Handler:    _PartnerService_UpdatePartner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prodpb/partner.proto",
}
